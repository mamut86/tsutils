x <- abs(matrix(cumsum(rnorm(5400,0,1)),36,150))
z <- abc(x)
source('~/R/Scripts/Packages/tsutils/R/abc.R')
x <- abs(matrix(cumsum(rnorm(5400,0,1)),36,150))
z <- abc(x)
(sum(dim(x)==1)>0 | class(x)=="numeric")
sum(dim(x)==1)>0
class(x)=="numeric"
(sum(dim(x)==1)>0 | class(x)=="numeric")
x.mean <- x
if (sum(dim(x)==1)>0 | class(x)=="numeric"){
x.mean <- x
} else {
x.mean <- colMeans(x, na.rm = TRUE)
}
x.mean <- colMeans(x, na.rm = TRUE)
class(x)
any(class(x)=="numeric"))
any(class(x)=="numeric"))
class(x)=="numeric"
class(x)
any(class(x)=="numeric"))
any(class(x)=="numeric")
(sum(dim(x)==1)>0 | any(class(x)=="numeric"))
zz <- c("array","matrix")
c("array","matrix") == "numeric"
any(c("array","matrix") == "numeric")
source('~/R/Scripts/Packages/tsutils/R/abc.R')
any(class(y) == "ts")
library(roxygen2)
oxygenise
roxygenise
roxygenise()
source('~/R/Scripts/Packages/tsutils/R/plot.Sthief.R')
plot.Sthief(AirPassengers)
source('~/R/Scripts/Packages/tsutils/R/plot.Sthief.R')
roxygenise()
source('~/R/Scripts/Packages/tsutils/R/plotSthief.R')
roxygenise()
source('~/R/Scripts/Packages/tsutils/R/plotSthief.R')
roxygenise()
install.packages("plotrix")
roxygenise()
library(roxygen2)
roxygenise()
roxygenise()
install.packages("roxygen2")
install.packages(c("blob", "bookdown", "broom", "chron", "clipr", "colorspace", "crayon", "DBI", "dbplyr", "desc", "dplyr", "DT", "evaluate", "fansi", "FNN", "furrr", "future", "future.apply", "ggplot2", "glmnet", "globals", "glue", "greybox", "hardhat", "haven", "httr", "ipred", "jsonlite", "kernlab", "knitr", "ks", "lmtest", "magrittr", "mclust", "nloptr", "openssl", "parallelly", "pkgload", "pracma", "processx", "progressr", "ps", "quantmod", "R.methodsS3", "R.oo", "R.utils", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readxl", "recipes", "rlang", "rmarkdown", "rprojroot", "rsample", "rugarch", "scales", "smooth", "testthat", "texreg", "tibble", "tidyquant", "tidyselect", "timetk", "tinytex", "tseries", "tzdb", "uuid", "vctrs", "waldo", "withr", "xfun", "yaml", "zoo"))
oxygenise()
library(roxygen2)
roxygenise()
install.packages("pandoc")
roxygenise()
library(tsutils)
source("~/R/Scripts/Packages/tsutils/R/abc.R")
roxygenise()
library(roxygen2)
roxygenise()
library(roxygen2)
roxygenise()
roxygenise()
library(roxygen2)
roxygenise()
?theta
fit <- theta(referrals)
plot(fit)
forecast.theta(fit,h=12) # Or simply use forecast(fit)
c(0, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 1)
length(c(0, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 1))
library(tsutils)
library(tsutils)
install.packages(c("bslib", "cli", "cpp11", "curl", "dbplyr", "DEoptimR", "digest", "downlit", "dplyr", "fontawesome", "fs", "future", "gargle", "gert", "ggplot2", "haven", "htmltools", "httr", "igraph", "jsonlite", "keras", "ks", "lme4", "MatrixModels", "openssl", "pbapply", "pkgbuild", "pkgload", "processx", "progressr", "promises", "purrr", "quantmod", "quantreg", "Rcpp", "RcppArmadillo", "readxl", "recipes", "remotes", "reticulate", "rmarkdown", "robustbase", "rstudioapi", "sass", "shiny", "tensorflow", "testthat", "tinytex", "usethis", "uuid", "vctrs", "webshot", "xfun", "xml2"))
install.packages("roxygen2")
library(roxygen2)
roxygenise()
roxygenise()
roxygenise()
roxygenise()
warnings()
warnings()
roxygenise()
roxygenise()
?Arima
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
library(tsutils)
roxygenise()
roxygenise()
roxygenise()
liobrary(roxygen)
library(roxygen2)
roxygenise()
roxygenise()
roxygenise()
library(tsutils)
roxygenise()
library(tsutils)
